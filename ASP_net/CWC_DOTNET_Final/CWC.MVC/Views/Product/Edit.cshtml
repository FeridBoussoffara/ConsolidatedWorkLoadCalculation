@model CWC.MVC.Models.ProductModel

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm("Edit", "Product", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>ProductModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">

            @Html.LabelFor(model => model.Photo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBox("Image", null, new { type = "file" })
                @Html.ValidationMessageFor(model => model.Photo)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Type, Model.Types, "-- -- Please Select -- --", htmlAttributes: new { @id = "mydrop" })
                @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group" id="Elec">
            @Html.LabelFor(model => model.Brand, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Brand, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Brand, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group" id="Furn">
            @Html.LabelFor(model => model.Material, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Material, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Material, "", new { @class = "text-danger" })
            </div>
        </div>

        <div id="Veh">
            <div class="form-group">
                @Html.LabelFor(model => model.WheelsNbr, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.WheelsNbr, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.WheelsNbr, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Capacity, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Capacity, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Capacity, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.VehiculeType, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.VehiculeType, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.VehiculeType, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.weight, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.weight, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.weight, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div id="Agri">
            <div class="form-group">
                @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.Category, Model.Categories, "-- -- Please Select -- --")
                    @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.ValidityDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ValidityDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ValidityDate, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div id="Tech">
            <div class="form-group">
                @Html.LabelFor(model => model.Version, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Version, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Version, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Technology, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Technology, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Technology, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>





        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}
<p id="shH" hidden>hello</p>
<div>
    @Html.ActionLink("Back to List", "Index")
</div>
@Scripts.Render("~/jquery/CWC/js")
<script type="text/javascript" language="javascript">

     $(document).ready(function () {
        $("#Elec").hide();
        $("#Furn").hide();
        $("#Agri").hide();
        $("#Tech").hide();
        $("#Veh").hide();

        $("#mydrop").change(function () {

            var value = $('option:selected', $(this)).text();
            if (value == "Agriculture")
            {
                $("#Agri").show();
                $("#Elec").hide();
                $("#Furn").hide();
                $("#Tech").hide();
                $("#Veh").hide();
            }
           else if (value == "Vehicule") {
                $("#Veh").show();
                $("#Elec").hide();
                $("#Furn").hide();
                $("#Agri").hide();
                $("#Tech").hide();
            }
            else if (value == "Software") {
                $("#Tech").show();
                $("#Elec").hide();
                $("#Furn").hide();
                $("#Agri").hide();
                $("#Veh").hide();
            }
           else if (value == "Electronic") {
                $("#Elec").show();
                $("#Furn").hide();
                $("#Agri").hide();
                $("#Tech").hide();
                $("#Veh").hide();
            }
            else if (value == "Furniture") {
                $("#Furn").show();
                $("#Elec").hide();
                $("#Agri").hide();
                $("#Tech").hide();
                $("#Veh").hide();
            }
            else {
                $("#Elec").hide();
                $("#Furn").hide();
                $("#Agri").hide();
                $("#Tech").hide();
                $("#Veh").hide();
            }

            //alert($('option:selected', $(this)).text());
        });
    });
</script>