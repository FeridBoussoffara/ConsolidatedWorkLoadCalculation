@model IEnumerable<CWC.MVC.Models.TasksViewModel>


   

@Scripts.Render("~/Script&Content/CWC/js")
<h2>@ViewBag.nom's tasks </h2>
@Html.ActionLink("Back to List", "Index", "", new { @class = "btn btn-primary" })
@Html.ActionLink("Check done tasks", "getdoneTasksPerEmployee", new { id = ViewBag.employee}, new { @class = "btn btn-primary" })
<div class="table-scrollable">
    <table class="table table-striped table-bordered table-hover table-checkable order-column" id="sample_1">
        <thead>
            <tr>
                <th></th>
                <th>
                    @Html.DisplayNameFor(model => model.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.DeadLine)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.StartDate)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.EndDate)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Priority)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.State)
                </th>

                <th>
                    @Html.DisplayNameFor(model => model.NomProject)
                </th>


                <th>
                    @Html.DisplayNameFor(model => model.MeanDuration)
                </th>
                <th>
                    Progress
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr class="odd gradeX">
                    <td></td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DeadLine)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.StartDate)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.EndDate)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Priority)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.State)
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.NomProject)
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.MeanDuration) hours
                    </td>
                    @if (item.EndDate < DateTime.Today)
                {
                        <td style="color:green">
                            Done
                        </td>
                    }
                    else
                    {
                        <td style="color:red">
                            Undone
                        </td>
                    }
                    <td>
                        @Html.ActionLink("Edit", "Edit", new { id = item.TaskId }) |
                        @Html.ActionLink("Details", "Details", new { id = item.TaskId }) |
                        @Html.ActionLink("Delete", "Delete", new { id = item.TaskId })
                    </td>
                </tr>
            }
        </tbody>

    </table>
    </div>
    <script type="text/javascript">

        AmCharts.makeChart("chartdiv",
    {
        "type": "serial",
        "categoryField": "nom",
        "startDuration": 1,
        "categoryAxis": {
            "gridPosition": "start"
        },
        "chartCursor": {
            "enabled": true
        },
        "chartScrollbar": {
            "enabled": true
        },
        "trendLines": [],
        "graphs": [
            {
                "fillAlphas": 1,
                "id": "AmGraph-1",
                "title": "graph 1",
                "type": "column",
                "valueField": "duree"
            },
            	{
            	    "balloonText": "[[title]] of [[category]]:[[value]]",
            	    "bullet": "round",
            	    "id": "AmGraph-2",
            	    "labelText": "[[value]]",
            	    "lineThickness": 2,
            	    "title": "Mean duration of tasks in the current project",
            	    "valueField": "moyenne"
            	}
        ],
        "guides": [],
        "valueAxes": [
            {
                "id": "ValueAxis-1",
                "title": "Tasks duration(hours)"
            }
        ],
        "allLabels": [],
        "balloon": {},
        "titles": [
            {
                "id": "Title-1",
                "size": 15,
                "text": "Tasks duration"
            }
        ],
        "dataProvider": @Html.Raw(Json.Encode(ViewBag.mychart))
        });




    </script>


    <div class="portlet-body">
        <div id="chartdiv" style="width: 100%; height: 400px; background-color: #FFFFFF;"></div>
    </div>
